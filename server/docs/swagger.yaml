basePath: /
definitions:
  handlers.AddUser.AddUserInput:
    properties:
      invitees:
        items:
          type: string
        type: array
    type: object
  handlers.CreateRoom.CreateRoomInput:
    properties:
      invitees:
        items:
          type: string
        type: array
      room:
        $ref: '#/definitions/model.Room'
    type: object
  handlers.DeleteUser.PasswordInput:
    properties:
      password:
        type: string
    type: object
  handlers.GenerateTransactions.BillReq:
    properties:
      amountToPay:
        type: number
      date:
        type: string
      name:
        type: string
      payers:
        items:
          type: string
        type: array
      roomId:
        type: string
      shouldPay:
        type: string
    type: object
  handlers.GenerateTransactions.TransactionResponse:
    properties:
      bill:
        $ref: '#/definitions/model.Bill'
      transactions:
        items:
          $ref: '#/definitions/model.Transaction'
        type: array
    type: object
  handlers.GetTransactions.TransactionResponse:
    properties:
      bill:
        $ref: '#/definitions/model.Bill'
      transaction:
        $ref: '#/definitions/model.Transaction'
    type: object
  handlers.JoinRoom.RoomResponse:
    properties:
      attendees:
        items:
          type: string
        type: array
      room:
        $ref: '#/definitions/model.Room'
    type: object
  handlers.Login.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.Login.UserData:
    properties:
      email:
        type: string
      uid:
        type: integer
      username:
        type: string
    type: object
  handlers.PayBill.PayBillInput:
    properties:
      billId:
        type: string
      paidOn:
        type: string
      payee:
        type: string
      payer:
        type: string
    type: object
  handlers.SignUp.NewUser:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  handlers.UpdateUser.UpdateUserInput:
    properties:
      field:
        type: string
      value:
        type: string
    type: object
  model.Bill:
    properties:
      amount:
        type: number
      date:
        type: string
      id:
        type: integer
      name:
        type: string
      roomID:
        type: integer
    type: object
  model.Room:
    properties:
      attendeesCount:
        type: integer
      createdAt:
        type: string
      date:
        type: string
      host:
        type: string
      id:
        type: integer
      name:
        type: string
      time:
        type: string
      url:
        type: string
      venue:
        type: string
    type: object
  model.Transaction:
    properties:
      billID:
        type: integer
      id:
        type: integer
      isPaid:
        type: boolean
      paidOn:
        type: string
      payee:
        type: string
      payer:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phoneNum:
        type: string
      registeredAt:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: kaiseong02@gmail.com
    name: Kai Seong
  description: This is a server for NTU SC2006's project - JustJio.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: JustJio API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Authenticates the user
      parameters:
      - description: Login Credentials
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/handlers.Login.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Login.UserData'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Log a user into the application
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Create an account for a user
      parameters:
      - description: New User
        in: body
        name: newUser
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SignUp.NewUser'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Signs up a user
      tags:
      - auth
  /bills:
    get:
      consumes:
      - application/json
      description: Get transactions by user's username
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.GetTransactions.TransactionResponse'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all transactions for a user
      tags:
      - transactions
  /bills/{roomId}:
    post:
      consumes:
      - application/json
      description: Generate transactions after splitting a bill
      parameters:
      - description: Bill Details
        in: body
        name: billRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.GenerateTransactions.BillReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GenerateTransactions.TransactionResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Generate transactions for a bill in a specific room
      tags:
      - transactions
  /bills/pay:
    patch:
      consumes:
      - application/json
      description: User pays a unsettled bill
      parameters:
      - description: Pay Bill Details
        in: body
        name: payBillRequest
        required: true
        schema:
          $ref: '#/definitions/handlers.PayBill.PayBillInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Pay a bill
      tags:
      - transactions
  /rooms:
    get:
      consumes:
      - application/json
      description: Get rooms by user's username
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Room'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all rooms for a user
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: Create a room in database
      parameters:
      - description: Room
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRoom.CreateRoomInput'
      - description: Invites
        in: body
        name: invites
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRoom.CreateRoomInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Room'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a room
      tags:
      - rooms
  /rooms/{roomId}:
    delete:
      consumes:
      - application/json
      description: Delete a room from database
      parameters:
      - description: Room ID
        in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Close a room
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: Invite additional users to a specific room
      parameters:
      - description: Users to invite
        in: body
        name: users
        required: true
        schema:
          $ref: '#/definitions/handlers.AddUser.AddUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Create new invitations
      tags:
      - invites
  /rooms/attendees/:
    get:
      consumes:
      - application/json
      description: Get attendees by roomID
      parameters:
      - description: Room ID
        in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
      summary: Get all attendees for a room
      tags:
      - rooms
  /rooms/decline/{roomId}:
    delete:
      consumes:
      - application/json
      description: Delete the room invitation in database
      parameters:
      - description: Room ID
        in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Decline a room
      tags:
      - invites
  /rooms/invites/{roomId}:
    get:
      consumes:
      - application/json
      description: Get invitations by user's username
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Room'
            type: array
        "500":
          description: Internal Server Error
      summary: Get all invitations for a user
      tags:
      - invites
  /rooms/join/{roomId}:
    patch:
      consumes:
      - application/json
      description: Set accepted to true in invitation database
      parameters:
      - description: Room ID
        in: path
        name: roomID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.JoinRoom.RoomResponse'
        "500":
          description: Internal Server Error
      summary: Join a room
      tags:
      - invites
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user account
      parameters:
      - description: User Password
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/handlers.DeleteUser.PasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
      summary: Get a specific user
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update user attribute with new value
      parameters:
      - description: Field
        in: body
        name: field
        required: true
        schema:
          type: string
      - description: Value
        in: body
        name: value
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UpdateUser.UpdateUserInput'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      summary: Update user attribute
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
