name: Deploy to Staging Environment

on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  deploy_to_staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://justjio-staging.rowentey.xyz/
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker-compose-staging.yml
          sparse-checkout-cone-mode: false

      - name: Transfer updated Docker Compose to Staging server
        uses: RowenTey/cloudflared-scp-action@v1.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
          port: ${{ secrets.SSH_PORT }}
          from: ./docker-compose-staging.yml
          to: ~/Documents/Codebase/justjio/docker-compose.yml
          service_token_id: ${{ secrets.SERVICE_TOKEN_ID }}
          service_token_secret: ${{ secrets.SERVICE_TOKEN_SECRET }}

      - name: SSH and run command on Staging server
        uses: and-fm/cloudflared-ssh-action@v3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          private_key_filename: ${{ secrets.SSH_PRIVATE_KEY_FILENAME }}
          private_key_value: ${{ secrets.SSH_PRIVATE_KEY_VALUE }}
          port: ${{ secrets.SSH_PORT }}
          service_token_id: ${{ secrets.SERVICE_TOKEN_ID }}
          service_token_secret: ${{ secrets.SERVICE_TOKEN_SECRET }}
          commands: |
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            export KAFKA_HOST=${{ vars.KAFKA_HOST }}
            export KAFKA_PORT=${{ vars.KAFKA_PORT }}
            export POSTGRES_HOST=${{ vars.POSTGRES_HOST }}
            export POSTGRES_DB=${{ vars.POSTGRES_DB }}
            export GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            export GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            export VAPID_EMAIL=${{ secrets.ADMIN_EMAIL }}
            export VAPID_PUBLIC_KEY=${{ secrets.VAPID_PUBLIC_KEY }}
            export VAPID_PRIVATE_KEY=${{ secrets.VAPID_PRIVATE_KEY }}
            export SMTP2GO_API_KEY=${{ secrets.SMTP2GO_API_KEY }}
            cd ~/Documents/Codebase/justjio
            docker compose pull
            docker image prune -f
            docker compose down -v
            docker compose up -d
