services:
  frontend:
    container_name: justjio-web
    image: ghcr.io/rowentey/justjio/web:latest
    networks:
      - justjio_network
      - caddy_network
    restart: unless-stopped
    environment:
      APP_ENV_PREFIX: VITE
      VITE_API_URL: https://justjio-api-staging.rowentey.xyz/v1
      VITE_WS_URL: wss://justjio-ws-staging.rowentey.xyz
    depends_on:
      - api-server
      - ws-server

  api-server:
    container_name: justjio-api
    image: ghcr.io/rowentey/justjio/api:latest
    restart: unless-stopped
    networks:
      - justjio_network
      - caddy_network
    environment:
      DSN: postgresql://postgres:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}?sslmode=disable
      PORT: 8080
      JWT_SECRET: ${JWT_SECRET}
      KAFKA_TOPIC_PREFIX: justjio
      KAFKA_URL: ${KAFKA_HOST}:${KAFKA_PORT}
      OUTLOOK_EMAIL: ${OUTLOOK_EMAIL}
      OUTLOOK_PASSWORD: ${OUTLOOK_PASSWORD}
    entrypoint: ["/api-server", "staging"]

  ws-server:
    container_name: justjio-ws
    image: ghcr.io/rowentey/justjio/ws:latest
    restart: unless-stopped
    networks:
      - justjio_network
      - caddy_network
    environment:
      PORT: 8081
      JWT_SECRET: ${JWT_SECRET}
      KAFKA_TOPIC_PREFIX: justjio
      KAFKA_URL: ${KAFKA_HOST}:${KAFKA_PORT}
    entrypoint: ["/ws-server", "staging"]

networks:
  justjio_network:
    name: justjio_network
  caddy_network:
    external: true
